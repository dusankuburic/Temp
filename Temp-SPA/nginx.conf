map $http_origin $cors_origin_header {
    default "";
    "~(^|^http:\/\/)(localhost$|localhost:[0-9]{1,4}$)" "$http_origin";
    "~^https://test-.-dev.example.pl$" "$http_origin"; # https://test-7-dev.example.pl
    "https://test.example.com" "$http_origin";
}

map $http_origin $cors_cred {
    default "";
    "~(^|^http:\/\/)(localhost$|localhost:[0-9]{1,4}$)" "true";
    "~^https://test-.-dev.example.pl$" "true"; # https://test-7-dev.example.pl
    "https://test.example.com" "true";
}


server {
  listen 80;
  listen 5000;
  listen 5001;


  add_header Access-Control-Allow-Origin $cors_origin_header always;
  add_header Access-Control-Allow-Credentials $cors_cred;
  add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
  add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";

  if ($request_method = 'OPTIONS' ) {
    return 204 no-content;
  }

  gzip on;
  gzip_http_version 1.1;
  gzip_disable      "MSIE [1-6]\.";
  gzip_min_length   256;
  gzip_vary         on;
  gzip_proxied      expired no-cache no-store private auth;
  gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_comp_level   9;
  client_max_body_size 5M;
  proxy_read_timeout 200s;

  location / {
    include /etc/nginx/mime.types;
    root /usr/share/nginx/html;
    add_header Cache-Control "public, max-age=1M";
    try_files $uri $uri/ /index.html =404;
  }

  location /healthcheck {
        access_log off;
        add_header 'Content-Type' 'text/plain';
        return 200 "Healthy\n";
    
  }
}